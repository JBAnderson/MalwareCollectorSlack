var moment = require('moment-timezone');
var zone = "America/Los_Angeles";
var restify = require('restify');
var fs = require('fs');
var logger = require('morgan');
var SlackBot = require('slackbots');
var server = restify.createServer({

});
server.use(restify.bodyParser({
	mapParams: true	
}));
server.use(restify.acceptParser(server.acceptable));


server.use(logger('dev'));

var port = process.env.PORT || 8080;


//create slack bot
var bot = new SlackBot({
	token: process.env.SLACK_TOKEN,
	name: 'Attacus Atlas'
});

bot.on('start', function() {
	bot.postMessageToChannel('general', 'Malware Collection started');
});


//routes will go here

server.post('/', function create(req, res, next) {
	
	bot.postMessageToChannel('general',
               '***************************\n' +
               'Malware Collected!' + '\n' +
               'MD5: ' + String(req.body.md5) + '\n' +
               '***************************\n');
        res.send("ok");
});


server.post('/json', function create(req, res, next) {
	
	if (req.body.connection.type == "accept") {
		
		bot.postMessageToChannel('json',
			'********************************\n' + 
			'Connection accepted at ' + moment(req.body.timestamp).tz(zone).format('dddd, MMMM, Do YYYY, h:mm:ss a') + '\n' +
			'IP: ' + String(req.body.src_ip) + '\n' +
			'Target port: ' + String(req.body.dst_port) + '\n' +
			'Protocol: ' + String(req.body.connection.protocol) + '\n' +
			'********************************\n');

		console.log("[#] JSON sent to slack /json channel.");
	}else{
		console.log("[#] reject request not reported to slack.");
	}
	res.send('ok');
});


server.post('/upload', function create(req, res, next) {
	
	bot.postMessageToChannel('logging', 'Binary Posted!');
	
	console.log("filename: " + req.files.file.name + "\n" + 
		    "tmp location: " + req.files.file.path);


	
	fs.rename(req.files.file.path, "uploads/" + req.files.file.name, function(err){
	if (err){
		return console.log(err)
	}else{
		console.log(req.files.file.name + " was saved to uploads/");
	}});
	
        res.send("ok");
        return next();
});

//start the server
server.listen(port);
console.log('Server started on port 8080');
